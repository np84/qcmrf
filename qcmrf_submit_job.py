import numpy as np
import json
from qiskit import IBMQ
import argparse

parser = argparse.ArgumentParser(description='Enqueue QCMRF experiments on qiskit runtime systems.')
parser.add_argument('backend', metavar='backend', type=str, nargs=1, help='Qiskit backend.')
parser.add_argument('--layout', nargs="+", type=int, help='List of qubits')
parser.add_argument('--auto_layout', dest='autolayout', action='store_true')
parser.add_argument('--train', dest='train', action='store_true')
args = parser.parse_args()

backend = args.backend[0]

options = {
	'backend_name': backend
}

if args.layout is not None:
	layout = args.layout
elif args.autolayout:
	layouts = {'ibm_auckland':[0,1,4,7,6,2,3,5,8,11,9],'ibmq_mumbai':[7,10,12,13,15,18,14,11,8,16,19],'ibm_cairo':[21,23,24,25,26,22,19,20,18,15,17,12],'ibm_hanoi':[6,7,4,1,2,3,5,8,11,9,10],'ibmq_ehningen':[10,12,13,14,16,19,20,22],'ibmq_montreal':[3,5,8,9,11,14,16,19,13,20,22,12],'ibm_washington':[51,50,49,48,47,35,46,45,44,43,42],'ibmq_toronto':[23,24,25,22,19,20,16,14,11,8,5],'ibmq_bogota':list(range(5))}
	layout = layouts[backend]
else:
	layout = None

print("LAYOUT FOR",backend,':',layout)


with open('account.json', 'r') as accountfile:
	account = json.load(accountfile)

IBMQ.enable_account(account['token'], account['url'])

if backend == 'ibmq_qasm_simulator' or backend == 'ibmq_bogota':
	account['project'] = 'member'

provider = IBMQ.get_provider(
	hub=account['hub'],
	group=account['group'],
	project=account['project']
)

with open('program_id.json', 'r') as idfile:
	res = json.load(idfile)

print(res)

TASKS = [
	#[[[0]],[[0,1]],[[0,1],[1,2]]],
	#[[[0,1],[1,2],[2,3]]],
	[[[0,1],[1,2],[2,3],[0,3]]]*10,
	[[[0,1],[1,2],[2,3],[3,4]]]*10
	#[[[0,1,2,3]]],
	#[[[0,1,2]],[[0,1,2],[2,3,4]]]
]

W = [[[-4.956230108249294, -3.5065709047645877, -4.717986044910651, -2.5870480778044307, -3.5910657480541692, -1.0294242577881012, -3.5412539598498496, -1.3269422771208434, -3.892387700951116, -1.418569432342815, -4.741377905429984, -2.522906449017349, -1.6881614805044727, -1.2565102842787632, -1.489668008896348, -3.728455909848592], [-4.711477442987933, -0.6145652196967237, -1.8722798711494057, -3.947974915082124, -0.4858333056008206, -1.9231700307027375, -1.75213268014606, -2.6417855601797773, -3.95924841988733, -3.4192678632886544, -0.8555142309369312, -4.634484616212153, -0.8390943308543068, -4.40336476953757, -4.0291406685863, -3.8052209064640783], [-2.3185868511238, -0.3406917465946657, -0.9634787750696834, -1.423113075981553, -1.4086922547682676, -3.1844922912237092, -1.6277213583468315, -1.450866680136846, -3.2353802255518813, -3.4402392708747316, -4.791641536388687, -4.710394634024936, -2.0922870862801592, -0.8594206149606425, -4.41787166445536, -0.983422349158869], [-2.5019426585178386, -1.1549468347260885, -3.136468732775321, -2.9843398323050208, -0.6948317329684253, -0.672088498395941, -2.390313516832413, -1.5826080416908472, -3.716294679049679, -2.292763930986626, -3.178550703025466, -3.3216528958756273, -2.5957201385704964, -3.7860533412867805, -2.107733294475572, -0.8366408250415596], [-2.0523538764468374, -0.6300476209928227, -0.10925462004488029, -1.3659471021431027, -2.8294977350099675, -1.6944009135714566, -4.609369118998192, -1.8122972700409692, -0.29854354494272695, -2.371789981799871, -3.830845238841639, -4.243182014450417, -4.011843163152677, -4.075864679474536, -2.7997060322391545, -4.665483116567148], [-0.7799399632040638, -1.5034451668604811, -1.8345474291906871, -3.567796600427462, -2.0219262572660366, -4.1605877177073, -3.9547623517340287, -3.3542153890140187, -0.9457410723335213, -3.306580774340657, -4.404794585147402, -2.441835181184576, -4.507410482091319, -0.45783436932582955, -1.59678978697195, -3.399774465274994], [-2.0434261394148447, -2.9653153382013677, -1.7262755542604329, -0.9986916341924994, -3.9205370822924155, -2.5227287702233845, -2.3764799512092627, -3.603128954908425, -1.8807101652995355, -1.0925321520186397, -0.6907644164870677, -2.9378129184153727, -2.9997818039569837, -1.3819512969780052, -3.6956904414431078, -3.2648931651871496], [-3.2935846694705257, -0.16085601216895729, -4.038298272162178, -2.715474886209572, -4.299415191355667, -4.005134344253601, -0.781613368729376, -1.2826598088065637, -1.2940002439196951, -0.8723396986259484, -3.4314926036297875, -0.9409449071164193, -4.577147480920315, -4.780434322385834, -3.104606625800151, -3.201585921625794], [-3.631668184416247, -4.337050102092412, -1.6992573108667006, -1.6458218781875646, -4.373514648279922, -1.9930752192181114, -2.5990754266715776, -3.0499117195953884, -4.138507338933748, -1.219701437515948, -2.86139054895007, -1.416871905787549, -3.0949281720633994, -1.9697080265916869, -2.2501672277083955, -0.7196902008527042], [-2.2779801510031605, -2.9605013546154018, -3.4074044348074097, -2.9179596548549864, -2.8252494426697954, -1.9198204017433063, -3.1548641789458127, -1.5284689473153694, -0.37264333357829305, -2.845642232350567, -0.8508493868207108, -0.7690126319664525, -1.2861480943906232, -3.978664275425322, -4.933595469727378, -4.124146657455818]],
[[-4.956230108249294, -3.5065709047645877, -4.717986044910651, -2.5870480778044307, -3.5910657480541692, -1.0294242577881012, -3.5412539598498496, -1.3269422771208434, -3.892387700951116, -1.418569432342815, -4.741377905429984, -2.522906449017349, -1.6881614805044727, -1.2565102842787632, -1.489668008896348, -3.728455909848592], [-3.3533162690116907, -4.320308181615173, -3.3517312287818757, -2.3837236308891394, -4.230174451343601, -4.911298046450946, -4.226252953652039, -2.0777221555448504, -2.6058270104877397, -0.755405608603513, -1.764635359406395, -1.1370619164138178, -2.877031488549513, -2.822070302060855, -2.615251351194781, -0.3807447683582028], [-3.448952090359054, -4.6298639224745, -1.903347168989062, -0.1414825442483938, -3.4724639601532306, -2.679732700067632, -2.042509347639426, -0.10800258015073627, -1.2282310048683756, -0.6875584416080622, -1.7742876611986422, -4.325717888502276, -0.5258132066389027, -3.4900438520127652, -0.6088606632932239, -3.6884205416218085], [-1.154451405379496, -3.535079645386744, -3.3595963628446803, -3.2416563621470105, -3.2876451086859815, -4.746393470187928, -4.208618313097557, -3.9656576176081835, -3.926623444626178, -4.835893477744707, -3.7510197780871715, -1.0256933614748895, -1.4045122142711266, -1.2897783267169154, -0.6290617407735128, -1.588972577098969], [-4.7319559717468795, -0.9364871010457207, -4.578616863009079, -1.7953923171225274, -1.9363832525522926, -3.177215972372508, -2.1348867909842015, -4.802527629136598, -3.6675268725187786, -3.9085010311528077, -1.5151965760078085, -3.076620519566389, -1.7929915866490078, -0.6631252177496556, -3.9905003480984362, -1.1296148525547132], [-4.324214259011032, -2.462407361850389, -3.51767685144938, -3.2791789775315934, -2.9990446732211478, -2.619366160875095, -3.137719012933317, -0.5081188956242757, -4.093816201545467, -1.6767219125692074, -0.6095258566835691, -4.243498561625822, -3.7393452422239073, -0.0954700034487157, -2.0111788268558533, -1.4550493699970337], [-0.456205922881999, -2.014449230423571, -2.075505602299842, -2.007363341029052, -0.20643931846070718, -0.2582170356299516, -3.016144801910608, -3.852370689922868, -0.6702076246287323, -2.039495277436749, -0.14187959072154754, -4.133947864853658, -2.1646944834102824, -2.726633292610252, -2.377955162016904, -2.96523242074533], [-4.3925946107461336, -0.875815458474265, -4.006704438502653, -4.937097102837301, -4.786625390810542, -1.723372646442892, -1.2311329082420075, -3.6487304665570806, -0.6803814735786489, -0.4801911587201291, -2.4457087869550653, -2.9456288665489545, -3.254093567412304, -0.7683873904173115, -1.6269798701928484, -4.1391605623402885], [-1.572263120445153, -1.489161945469311, -2.5728603518547937, -1.4938982075454703, -4.054755855940378, -0.07100697991829907, -3.486530966178477, -2.3338461177864533, -2.2811830044441237, -3.1505270780854655, -1.399044405810336, -1.1362353324824386, -1.073276980300224, -3.208334788120678, -0.22863758228145592, -4.988881540234331], [-4.97777939837122, -2.7053973500627397, -4.787397613320986, -0.4442434078710491, -2.845085479709988, -0.0768759178025391, -3.0147530614936175, -1.5894847504932383, -1.466767285572545, -4.025051149184572, -0.9821908392833043, -4.997482952173836, -2.200986880162999, -1.8554784330323635, -1.5036652669901467, -4.93630757030626]]
]

if not args.train:
	for t,T in enumerate(TASKS):
		print(T)
		runtime_inputs = {
				"graphs": T,
				"repetitions": 1,
				"shots": 100000,
				"layout": layout,
				"thetas": W[t],
				"measurement_error_mitigation": 2,
				"optimization_level": 3
			}

		if backend == 'ibmq_qasm_simulator':
			runtime_inputs['measurement_error_mitigation'] = 0

		job = provider.runtime.run(
			program_id=res['program_id'],
			options=options,
			inputs=runtime_inputs,
			callback=print
		)

		print(job.job_id(),job.status())
		
else:
	runtime_inputs = {
		"graphs": [[[0,1],[1,2]]],
		"mu": [0.3,0,0,0.7,0.1,0.2,0.1,0.6],
		"data": ['000','001','001','110','111','111','111','111','111','111'],
		"iterations": 50,
		"train": True,
		"adam": True,
		"layout": layout,
		"shots": 100000,
		"measurement_error_mitigation": 1,
	}

	if backend == 'ibmq_qasm_simulator':
		runtime_inputs['measurement_error_mitigation'] = 0
		
	elif backend == 'ibmq_montreal' or backend == 'ibmq_toronto':
		runtime_inputs['shots'] = 32000
		
	elif backend == 'ibmq_bogota':
		runtime_inputs['shots'] = 20000

	job = provider.runtime.run(
		program_id=res['program_id'],
		options=options,
		inputs=runtime_inputs,
		callback=print
	)

	print(job.job_id(),job.status())
